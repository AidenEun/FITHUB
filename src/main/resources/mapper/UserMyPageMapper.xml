<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.demo.mapper.UserMyPageMapper">

	<sql id="criBoard">
		<if test="cri.keyword != '' and cri.type != ''">
			<trim prefixOverrides="or" prefix="(" suffix=") and">
				<foreach collection="cri.typeArr" item="type">
					or
					<choose>
						<when test="type == 'T'.toString()">
							(board_title like('%${cri.keyword}%'))
						</when>
						<when test="type == 'C'.toString()">
							(board_content like('%${cri.keyword}%'))
						</when>
					</choose>
				</foreach>
			</trim>
		</if>
	</sql>

	<sql id="criMessage">
		<if test="cri.keyword != '' and cri.type != ''">
			<trim prefixOverrides="or" prefix="(" suffix=") and">
				<foreach collection="cri.typeArr" item="type">
					or
					<choose>
						<when test="type == 'C'.toString()">
							(message_content like('%${cri.keyword}%'))
						</when>
						<when test="type == 'S'.toString()">
							(send_id like('%${cri.keyword}%'))
						</when>
						<when test="type == 'R'.toString()">
							(receive_id like('%${cri.keyword}%'))
						</when>
					</choose>
				</foreach>
			</trim>
		</if>
	</sql>

	<sql id="criBookmark">
		<if test="cri.keyword != '' and cri.type != ''">
			<trim prefixOverrides="or" prefix="(" suffix=") and">
				<foreach collection="cri.typeArr" item="type">
					or
					<choose>
						<when test="type == 'T'.toString()">
							(board.board_title like('%${cri.keyword}%'))
						</when>
						<when test="type == 'C'.toString()">
							(board.board_content like('%${cri.keyword}%'))
						</when>
						<when test="type == 'W'.toString()">
							(board.user_id like('%${cri.keyword}%'))
						</when>
					</choose>
				</foreach>
			</trim>
		</if>
	</sql>

	<sql id="criProductBookmark">
		<if test="cri.keyword != '' and cri.type != ''">
			<trim prefixOverrides="or" prefix="(" suffix=") and">
				<foreach collection="cri.typeArr" item="type">
					or
					<choose>
						<when test="type == 'T'.toString()">
							(product_board.board_title like('%${cri.keyword}%'))
						</when>
						<when test="type == 'C'.toString()">
							(product_board.board_content like('%${cri.keyword}%'))
						</when>
						<when test="type == 'W'.toString()">
							(product_board.admin_id like('%${cri.keyword}%'))
						</when>
					</choose>
				</foreach>
			</trim>
		</if>
	</sql>

	<sql id="criMyScribe">
		<if test="cri.keyword != '' and cri.type != ''">
			<trim prefixOverrides="or" prefix="(" suffix=") and">
				<foreach collection="cri.typeArr" item="type">
					or
					<choose>
						<when test="type == 'I'.toString()">
							(trainer.trainer_id like('%${cri.keyword}%'))
						</when>
						<when test="type == 'N'.toString()">
							(trainer.trainer_nickname like('%${cri.keyword}%'))
						</when>
					</choose>
				</foreach>
			</trim>
		</if>
	</sql>

	<sql id="criMyChallenge">
		<if test="cri.keyword != '' and cri.type != ''">
			<trim prefixOverrides="or" prefix="(" suffix=") and">
				<foreach collection="cri.typeArr" item="type">
					or
					<choose>
						<when test="type == 'T'.toString()">
							(chall_notice_board.chall_name like('%${cri.keyword}%'))
						</when>
						<when test="type == 'C'.toString()">
							(chall_notice_board.chall_content like('%${cri.keyword}%'))
						</when>
					</choose>
				</foreach>
			</trim>
		</if>
	</sql>

	<sql id="criUTmatching">
		<if test="cri.keyword != '' and cri.type != ''">
			<trim prefixOverrides="or" prefix="(" suffix=") and">
				<foreach collection="cri.typeArr" item="type">
					or
					<choose>
						<when test="type == 'I'.toString()">
							(trainer_id like('%${cri.keyword}%'))
						</when>
					</choose>
				</foreach>
			</trim>
		</if>
	</sql>

<!--	다이어리 -->

	<insert id="insertDiary">
		insert into diary (user_id,today_weight,exer_calories,food_calories,today_exer,today_breakfast,today_lunch,today_dinner,today_snack,carbo,protein,fat,regdate,diary_title,diary_content,mychall_num)
		values(#{userId},#{todayWeight},#{exerCalories},#{foodCalories},#{todayExer},#{todayBreakfast},#{todayLunch},#{todayDinner},#{todaySnack},#{carbo},#{protein},#{fat},#{regdate},#{diaryTitle},#{diaryContent},#{myChallNum})
	</insert>

	<insert id="insertStamp">
		insert into stamp (chall_num,user_id,regdate) values (#{sccChallNum},#{userId},#{diarydate})
	</insert>

	<update id="updateDiary">
		update diary set today_weight=#{todayWeight},exer_calories=#{exerCalories},food_calories=#{foodCalories},today_exer=#{todayExer},today_breakfast=#{todayBreakfast},today_lunch=#{todayLunch},today_dinner=#{todayDinner},
						 today_snack=#{todaySnack},carbo=#{carbo},protein=#{protein},fat=#{fat},diary_title=#{diaryTitle},diary_content=#{diaryContent} where diary_num=#{diaryNum}
	</update>

	<delete id="deleteDiary">
		delete from diary where diary_num=#{diaryNum}
	</delete>

	<delete id="removeStamp">
		delete from stamp where user_id=#{userId} and regdate=#{regdate}
	</delete>

	<select id="getDiaryDetail">
		select * from diary where user_id = #{loginUser} and regdate=#{choicedate}
	</select>

	<select id="checkList">
		select * from diary where user_id = #{loginUser} and regdate=#{choicedate}
	</select>

	<select id="getDiaryByNum">
		select * from diary where diary_num =#{diaryNum}
	</select>



	<!--재우-->
	<!--메세지-->
	<select id="getMyMessageAll">
		select * from message where (send_id=#{userId} or receive_id=#{userId}) and
		<include refid="criMessage"></include>
		<![CDATA[
			0 < message_num order by message_num desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<select id="getMyMessageSend">
		select * from message where send_id=#{userId} and
		<include refid="criMessage"></include>
		<![CDATA[
			0 < message_num order by message_num desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<select id="getMyMessageReceive">
		select * from message where receive_id=#{userId} and
		<include refid="criMessage"></include>
		<![CDATA[
			0 < message_num order by message_num desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<select id="getMessageTotal">
		select count(*) from message where  (send_id=#{userId} or receive_id=#{userId}) and
		<include refid="criMessage"></include>	message_num > 0
	</select>
	<select id="getMessageTotalSend">
		select count(*) from message where  send_id=#{userId} and
		<include refid="criMessage"></include> message_num > 0
	</select>
	<select id="getMessageTotalReceive">
		select count(*) from message where receive_id=#{userId} and
		<include refid="criMessage"></include> message_num > 0
	</select>

	<select id="getMessageLastNum">
		select max(message_num) from message where user_id=#{userId}
	</select>

	<!--나의 매칭리스트-->
	<select id="getMyMatchinglist">
		select * from u_t_matching where user_id=#{userId} and
		<include refid="criUTmatching"></include>
		<![CDATA[
			0 < matching_num order by matching_num desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<select id="getMatchingTotal">
		select count(*) from u_t_matching where  user_id=#{userId} and
		<include refid="criUTmatching"></include> matching_num > 0
	</select>

	<update id="updateMatching">
		update u_t_matching set user_check=#{userCheck} where matching_num=#{matchingNum}
	</update>

	<!--보드-->
	<select id="getBoardTotal">
		select count(*) from board where user_id=#{userId} and
		<include refid="criBoard"></include> board_num > 0
	</select>
	<select id="getBoardLastNum">
		select max(board_num) from board where user_id=#{userId}
	</select>
	<select id="findBoardByNum">
		select * from board where board_num=#{boardNum}
	</select>


	<select id="getMyBoard">
		select * from board where user_id=#{userId} and
		<include refid="criBoard"></include>
		<![CDATA[
			0 < board_num order by board_num desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<!--북마크-->
	<select id="getBookmarkTotal">
		select count(*) from board,bookmark where bookmark.user_id=#{userId}
		and board.board_category =bookMark.board_category and board.board_num=bookMark.board_num and
		<include refid="criBookmark"></include> bookmark_idx > 0
	</select>

	<select id="getBookmarkProductTotal">
		select count(*) from product_board,bookmark where bookmark.user_id=#{userId}
		and product_board.category =bookMark.board_category and product_board.board_num=bookMark.board_num and
		<include refid="criProductBookmark"></include> bookmark_idx > 0
	</select>

	<select id="getBookmarkLastNum">
		select max(bookmark_idx) from bookmark where user_id=#{userId}
	</select>

	<!--<select id="getMyBookmark">
		select * from bookmark where user_id=#{userId}
	</select>-->

	<select id="getMyBookmark">
		select * from board,bookmark where bookmark.user_id=#{userId}
		and board.board_category =bookMark.board_category and board.board_num=bookMark.board_num and
		<include refid="criBookmark"></include>
		<![CDATA[
			0 < bookmark.bookmark_idx order by bookmark.bookmark_idx desc limit #{cri.startrow},#{cri.amount}
		]]>

	</select>
	<select id="getMyBookmarkProduct">
		select * from product_board,bookmark where bookmark.user_id=#{userId}
		and product_board.category =bookMark.board_category and product_board.board_num=bookMark.board_num and
		<include refid="criProductBookmark"></include>
		<![CDATA[
			0 < bookmark.bookmark_idx order by bookmark.bookmark_idx desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<!--내구독-->
	<select id="getMyScribe">
		select * from trainer
		join subscribe on subscribe.trainer_id = trainer.trainer_id
		where subscribe.user_id = #{userId} and
		<include refid="criMyScribe"></include>
		<![CDATA[
			0 < subscribe.sub_num order by subscribe.sub_date desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<select id="getScribeTotal">
		select count(*) from trainer
		join subscribe on subscribe.trainer_id = trainer.trainer_id
		where subscribe.user_id = #{userId} and
		<include refid="criMyScribe"></include> subscribe.sub_num > 0
	</select>

	<!--내 챌린지-->
<!--	<select id="getChallengeTotal">
		select count(my_challenge.chall_num) from my_challenge
		join chall_notice_board on chall_notice_board.chall_num = my_challenge.chall_num
		where my_challenge.user_id=#{userId} and
		my_challenge.mychall_num > 0
	</select>-->

	<select id="getChallengeAllAllTotal">
		select count(my_challenge.chall_num) from my_challenge
		join chall_notice_board on chall_notice_board.chall_num = my_challenge.chall_num
		where my_challenge.user_id = #{userId} and
		<include refid="criMyChallenge"></include> my_challenge.mychall_num > 0
	</select>

	<select id="getChallengeAllTermTotal">
		select count(my_challenge.chall_num) from my_challenge
		join chall_notice_board on chall_notice_board.chall_num = my_challenge.chall_num
		where my_challenge.user_id = #{userId} and chall_notice_board.chall_term = #{challTerm} and
		<include refid="criMyChallenge"></include> my_challenge.mychall_num > 0
	</select>

	<select id="getChallengeCategoryAllTotal">
		select count(my_challenge.chall_num) from my_challenge
		join chall_notice_board on chall_notice_board.chall_num = my_challenge.chall_num
		where my_challenge.user_id = #{userId} and chall_notice_board.chall_category =#{challCategory} and
		<include refid="criMyChallenge"></include> my_challenge.mychall_num > 0
	</select>

	<select id="getChallengeCategoryTermTotal">
		select count(my_challenge.chall_num) from my_challenge
		join chall_notice_board on chall_notice_board.chall_num = my_challenge.chall_num
		where my_challenge.user_id = #{userId} and chall_notice_board.chall_term = #{challTerm} and chall_notice_board.chall_category =#{challCategory} and
		<include refid="criMyChallenge"></include> my_challenge.mychall_num > 0
	</select>
<!--	<select id="getMyChallenge">
		select * from chall_notice_board
		join my_challenge on my_challenge.chall_num = chall_notice_board.chall_num
		where my_challenge.user_id = #{userId}
		order by my_challenge.sub_regdate desc limit #{cri.startrow},#{cri.amount}
	</select>-->
	<select id="getMyChallengeAllAll">
		select * from chall_notice_board
		join my_challenge on my_challenge.chall_num = chall_notice_board.chall_num
		where my_challenge.user_id = #{userId} and
		<include refid="criMyChallenge"></include>
		<![CDATA[
			0 < my_challenge.mychall_num order by my_challenge.sub_regdate desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<select id="getMyChallengeAllTerm">
		select * from chall_notice_board
		join my_challenge on my_challenge.chall_num = chall_notice_board.chall_num
		where my_challenge.user_id = #{userId} and chall_notice_board.chall_term =#{challTerm} and
		<include refid="criMyChallenge"></include>
		<![CDATA[
			0 < my_challenge.mychall_num order by my_challenge.sub_regdate desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<select id="getMyChallengeCategoryAll">
		select * from chall_notice_board
		join my_challenge on my_challenge.chall_num = chall_notice_board.chall_num
		where my_challenge.user_id = #{userId} and chall_notice_board.chall_category = #{challCategory} and
		<include refid="criMyChallenge"></include>
		<![CDATA[
			0 < my_challenge.mychall_num order by my_challenge.sub_regdate desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>

	<select id="getMyChallengeCategoryTerm">
		select * from chall_notice_board
		join my_challenge on my_challenge.chall_num = chall_notice_board.chall_num
		where my_challenge.user_id = #{userId} and chall_notice_board.chall_term = #{challTerm} and chall_notice_board.chall_category = #{challCategory} and
		<include refid="criMyChallenge"></include>
		<![CDATA[
			0 < my_challenge.mychall_num order by my_challenge.sub_regdate desc limit #{cri.startrow},#{cri.amount}
		]]>
	</select>


	<select id="getSuccessMyChallenge">
		select * from chall_notice_board
		join my_challenge on my_challenge.chall_num = chall_notice_board.chall_num
		where my_challenge.user_id = #{userId} and
		chall_notice_board.chall_term=
		(select count(regdate) from stamp
		where user_id=#{userId} and chall_notice_board.chall_num=stamp.chall_num and
		(regdate between date(my_challenge.sub_regdate) and date_sub(date(date_add(my_challenge.sub_regdate,interval chall_notice_board.chall_term day)),interval 1 day)));
	</select>

	<select id="getSuccessMyChallengeTotal">
		select count(*) from chall_notice_board
		join my_challenge on my_challenge.chall_num = chall_notice_board.chall_num
		where my_challenge.user_id = #{userId} and
		chall_notice_board.chall_term=
		(select count(regdate) from stamp
		where user_id=#{userId} and chall_notice_board.chall_num=stamp.chall_num and
		(regdate between date(my_challenge.sub_regdate) and date_sub(date(date_add(my_challenge.sub_regdate,interval chall_notice_board.chall_term day)),interval 1 day)));
	</select>


	<!--트레이너 신청-->
	<insert id= "insertApplytrainer">
		INSERT INTO trainer_signup (user_id, trainer_zipcode, trainer_addr, trainer_addrdetail, trainer_addretc, trainer_part, trainer_career, trainer_content)
		VALUES
		(#{userId}, #{trainerZipcode}, #{trainerAddr}, #{trainerAddrdetail},#{trainerAddretc}, #{trainerPart}, #{trainerCareer}, #{trainerContent})
	</insert>

	<select id="getSignUpLastNum">
		select max(signup_num) from trainer_signup where user_id=#{userId}
	</select>


</mapper>







