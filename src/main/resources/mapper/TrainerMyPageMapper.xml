<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.demo.mapper.TrainerMyPageMapper">
	<sql id="cri">
		<if test="keyword != '' and type != ''">
			<trim prefixOverrides="or" prefix="(" suffix=") and">
				<foreach collection="typeArr" item="type">
					or
					<choose>
						<when test="type == 'T'.toString()">
							(board_title like('%${keyword}%'))
						</when>
						<when test="type == 'C'.toString()">
							(board_content like('%${keyword}%'))
						</when>
						<when test="type == 'W'.toString()">
							(user_id like('%${keyword}%'))
						</when>
					</choose>
				</foreach>
			</trim>
		</if>
	</sql>

	<insert id="registDiary">
		insert into diary (user_id,today_weight,exer_calories,food_calories,today_exer,today_breakfast,today_lunch,today_dinner,today_snack,carbo,protein,fat,regdate,diary_title,diary_content,mychall_num)
		values(#{userId},#{todayWeight},#{exerCalories},#{foodCalories},#{todayExer},#{todayBreakfast},#{todayLunch},#{todayDinner},#{todaySnack},#{carbo},#{protein},#{fat},#{reddate},#{diaryTitle},#{diaryContent},#{todayChallNum});
	</insert>

	<update id="modifyDiary">
		update diary set today_weight=#{todayWeight},exer_calories=#{exerCalories},food_calories=#{foodCalories},today_exer=#{todayExer},today_breakfast=#{todayBreakfast},today_lunch=#{todayLunch},today_dinner=#{todayDinner},
						 today_snack=#{todaySnack},carbo=#{carbo},protein=#{protein},fat=#{fat},diary_title=#{diaryTitle},diary_content=#{diaryContent},mychall_num=#{todayChallNum} where diary_num=#{diaryNum}
	</update>

	<delete id="removeDiary">
		delete from diary where diary_num=#{diaryNum}
	</delete>

	<select id="getDiaryDetail">
		select * from diary where user_id = #{loginUser} and regdate=#{choicedate}
	</select>

	<select id="checkList">
		select * from diary where user_id = #{loginUser} and regdate=#{choicedate}
	</select>



	<!--재우-->
	<!--메세지-->
	<select id="getMyMessage">
		select * from message where send_id=#{trainerId} or receive_id=#{trainerId}
		order by message_num desc limit #{cri.startrow},#{cri.amount}
	</select>

	<select id="getMessageTotal">
		select count(*) from message where send_id=#{trainerId} or receive_id=#{trainerId} and
		message_num > 0
	</select>
	<select id="getMessageLastNum">
		select max(message_num) from message where user_id=#{trainerId}
	</select>

	<!--보드-->
	<select id="getBoardTotal">
		select count(*) from board where user_id=#{trainerId} and
		board_num > 0
	</select>
	<select id="getBoardLastNum">
		select max(board_num) from board where user_id=#{trainerId}
	</select>
	<select id="findBoardByNum">
		select * from board where board_num=#{boardNum}
	</select>


	<select id="getMyBoard">
		select * from board where user_id=#{trainerId}
		order by board_num desc limit #{cri.startrow},#{cri.amount}
	</select>

	<!--북마크-->
	<!--bookmark_idx : regdate 로 수정 필요 : 임시값이 null이라 오류로 인해-->
	<select id="getBookmarkTotal">
		select count(*) from bookmark where user_id=#{trainerId} and
		bookmark_idx > 0
	</select>
	<select id="getBookmarkLastNum">
		select max(bookmark_num) from bookmark where user_id=#{trainerId}
	</select>

	<!--<select id="getMyBookmark">
		select * from bookmark where user_id=#{userId}
	</select>-->

	<select id="getMyBookmark">
		select * from board,bookmark where bookmark.user_id=#{trainerId}
		and board.board_category =bookMark.board_category and board.board_num=bookMark.board_num
		order by bookmark.regdate desc limit #{cri.startrow},#{cri.amount}

	</select><select id="getMyBookmarkProduct">
	select * from product_board,bookmark where bookmark.user_id=#{trainerId}
	and product_board.category =bookMark.board_category and product_board.board_num=bookMark.board_num
	order by bookmark.regdate desc limit #{cri.startrow},#{cri.amount}
</select>

	<!--내구독-->
	<select id="getMyScribe">
		select * from user join subscribe on subscribe.user_id = user.user_id
		where subscribe.trainer_id = #{trainerId}
		order by subscribe.sub_date desc limit #{cri.startrow},#{cri.amount}
	</select>

	<select id="getScribeTotal">
		select count(*) from subscribe where user_id=#{trainerId} and
		sub_num > 0
	</select>

	<!--내 챌린지-->
	<select id="getChallengeTotal">
		select count(*) from my_challenge where user_id=#{trainerId} and
		chall_num > 0
	</select>

	<select id="getMyChallenge">
		select * from chall_notice_board join my_challenge on my_challenge.chall_num = chall_notice_board.chall_num
		where my_challenge.user_id = #{trainerId}
		order by my_challenge.sub_regdate desc limit #{cri.startrow},#{cri.amount}
	</select>



</mapper>







